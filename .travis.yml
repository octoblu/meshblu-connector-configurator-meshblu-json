branches:
  only:
  - "/^v[0-9]/"
matrix:
  fast_finish: true
  include:
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-armv7
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-armv7 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x86
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x86 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x64
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x64 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian --destination-path=/usr/share/meshblu-connectors/configurators/meshblu-json \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: osx
    node_js: '8'
    language: node_js
    after_success:
    - yarn global add meshblu-connector-pkger meshblu-connector-installer-macos meshblu-connector-uploader-github
    - |
      meshblu-connector-pkger \
      && meshblu-connector-installer-macos --destination-path=/Library/MeshbluConnectors/configurators/meshblu-json \
      && meshblu-connector-uploader-github
env:
  global:
  - secure: u0A73poWHQDjm2gSgIfOHG1rWRyxhfcFqJTJ3jcV/Q/HLzY/A1kxU1GC+4ZkKZPXfG0FX8aTY5EP6BdOAk7Zo85G2zhQeAhL133bkZpQmfd/nSGyd01K1rSwU7N3JNR/hH6z95jqbZJh2qOHDqUe8tx0DBmOx+PUYOrVJpaEsmY70+CA8L5M3cY0McDINTbFItyuMgZ6uWvUwFYQ3TLE8dwLtewtc5ANm1e6UEyylYtIxluci+RjtKCR2+LXBaDJXyc57u6UINZPMcadQkdE1tgW2n5mj+i5ChGGkj73+hUGr3XoJxj6MIf8bwtDrUTT3rLD/DX1r5Z3qmYGV0u6AXDxN2v953SpUAP4qV2kw8/iFC86PrUtvvjRqa4CJ9DBPFcosO+8YxxflEcYUfUN6q4K3BbCof8YK7OcaUVILoCbR3uEI+pPSK/QuUKxKtZuLxxSweLdcGpl6+6A9nOR/uC3GeswKzygUIiOoQRj9KEuhZBbI+iYn4/RmJMlmyRU1nz6ed+EqMi1szGki/OT0XQNdVf2nut7fkeC4F2Xzvf3vYJZV45ZbocnKceWJ8UxpNJYlKKfbcpl3p2OLcmNDYEm2Es3ezIwB0m/9cE2WmWDcQ1jyrlEW/VEUk1nSE0OO1gdwzU8/r1lT8eDcfuDVf23vqXmwhIjxYEKWhwZvo4=
  - secure: BNbEz6RqyJpKryf2vrLWWPLOMK7Yh61Lp3rnOI5GCNQ4LOJFgCJwG27rsaByI3tYQpOAq52LszLHQxSS81GorypfCKeOD5na7njxd28smPywNpzUzvHrqlNr2jnJ9Dvjcqeq9d3NkxlO+XekYokd7GlCcjVHXmG/trSp5zsZMxYQ4V8ltzQ1zsHu/hyO3Depvah7zWczh9choJw1F+4MVFxyDNm/sIMgsdhBu2Y+du9xuzm6zFyRScbkxuztPiBrA4xIdFE6wK9BuOHOB87M9YHVsT1+K1GFkx2v9U2PE53fUU5k/oKAxI8B5jdGz45XS+L9l3Xtm1AfCtRsqYZjwGUN20VckYwEocn5TsprP75BDBVWXxfC088VYQTeikoii7q/SEhO5rbw0dqkMwF86GUMhgE2twYa+zN7BlsM6KVIT1OaipVplkLvvf+1kC3Ik6/ofpE4EFFPxzzV+QDTzfrmGtzuNOnbIvzO6DCXsey1YvsLkqFY0G1HNu+2rq3gyfdLYHa2qw/kUKUu2KbnorCNFTa9eqFo+YIXNf7YkXQNbd5je0wSgC84uMoq757jzKCQ6S7aBga+AyVO+D4limQWWmizJ4pD/B/u/qKQllEkXyWvzoodAogTuaNNEvZUXYAYdn2Pj8jdgoC9Z4FMqIxwUIJV4wKoNYVUyipwlko=
  - secure: h56DgUhgHeH8WJlztxG0ZbmysRkN5dfv1agWuyoSzvnfuBTehX22Mpbkt9kvsCYNAXhJqZTE/hSU5lqsI1XPQDnWXRHt/XkMQX+vGzyxcNdWnQ47xrAu6ZV6xuoShQ4e23EkxoDuFy9duV5Huwt0WhJDHwAkXhB4bpZQoUmEzLW4G1ogK2EcZR/2GHwbEAfJpBUc9T5/HyrjmxGzeeCGXHjeM3z1dypHvbprji8qjJF6cRvSiqxe4a+sXxWr30S53oeXUCnNxvChngRMZ3Hd+tuh2wQIb1wGgdmqD4UOhoi/D7I+aTCt0qOLz/jUwhD+W+MEFcka0AG7/bzwuKCGHu3z2p4bco6sgJrpyiEG0T1vpppCMmCzcM4iKQHN1s6aFDhPYfVVlveHPCHpPz5LlIqctrOcktAT7J2y8OfR0N6jhm/tfjRfI02YNa1HKzUMTYdjbuOiK0iEprDTQuA68jiBRov2Z8ieGpUR60m8i/BEzB3++Te/cJWcdhri6/Vh1Bcknpddp19PvV9OUXfVA6PiTAQUQwLDfpxkqhixdgU44S1YSLFSWdakjGxhErtwzEMzi7lY9v2tcmGwRepHxSTTLw4/6naMeeBO8k/T0ezy/AqyeOFE/w2kvseMz+bsjtKJAWca1r2xolKhuBDi0Bj3dTOfGBQ8qwfXYQzYVAo=
  - secure: wK6ZRDBsbadOqp1YeFJn9QsMg551x0BvMsLpv80EB+Xj8BM83nZiSrRWkRbJV8rIYLPDo9s1L7G2nxLEnsUvME+CEQ+dPrvLFLuj2TgtMf/Q5noMugDUkpGBeTglYSji1Fv+9/uo6pV6I2DX/HckWO9e2Fh73MsIj4aGo4mjgbVCOyDrY8TR/Qn1TidHPvsrkHpcuqbM/ekMkxMRU9NMRbsNIb7b0hHIvi+uf0FLebYfcd3Y3g6QpGcK81uGDso7CIkn3ToPyAU8CNuMeYNxIAdhytMYvw6Lp2Pp9kAupchInrfY89LWof8L3UAUkZwfh5bozdWVhacxQbvCc4rNUiSDnRek7IvxRLncua7Yky0JBkd2EqpX9DENdOE5YPLJbx7cUF0L6WZAMeWf77SADtJ2DEuhYEAjyyQYztDqtxapkcCn1UP8F+HfWfxT/BU7Kh5n9+ofgsxeu+ZTUcN/ZyY1XlEqtL1NfZveSWFOk5ouvOs416Yl2vCvsEGqzhQ49JcprAHfWypT1DAT96cmhOxlo8fDU6vKw7Rxk3oL15OTtleVBHh5lJ5OV5GyB9ZYVZdPozm7TeU7M4D+PGeTcWjygrSOHlgyXtcNYzDHHzpbeZmXsdOldk2WHVv3wn672WkhAoZUtmrWgFadYhPRnvPSyqsa1yuXfhg/mDLFSHc=
  - secure: DJ2lS7kQXE4jIQLowQdDghT3dN9DgfO8W3S1G0sKFac7asnk/+E8tBM+YbnJv+lZnefPwCnASsxg3hu1aYhluURQX9CKcXGOMXQMhLNdD5Ubf2BWuI1trunLj2IY7dQXK5FFhQOWxHADzsspDBvyoAyrUUK2d11nsJaHBe/SYoy2xFu49LqY44bNn8LJTA98k75Jbdczvq54RtEsyGbx5y2NVaxDiw2V0yjd8rQTwbcpOzgR9xGoz24wKjiVl0ynm+ehIDVv/MX3d1WRdHasRjOG+FQsAWpty0Rkm0lvAx7vZWVE098CIFYc3BhjUpA+yhDS+5WhWsu4SNpAai9iMr7hY31tcqClqTDbAZW32HG7GYVjKJHfePlcAl3ktLSznsP/j+Kl+XpqG/dh7ksjTipLoQOvKLoP5nrQD3Uln7d2Ai0m2k4tNKDQuOvXOli34TK9lbHodJQ+hdX11mJrq+64bVxFX+j82O6aiilpCMRj/a4rYQkXnWeJj/IsuhjI4hLkETrI3ldnT3bxW1yHpARJfTaI5fY/1a3KjSGD+Tdhxj5/w7j8thRkhQCX82IJEQINduJxdzSARmFgk6XrMl4M+wXDo1+KcwJgW5Tk1tUWXBg22spdOUlmlWc7B8ClOWpnka+XRQ/kuK92X5rlKp9atxJQWnkOIlg5BX+wgF8=
  - secure: JeefvsxKCAr3tvBTOfR9ZvflQCC8N+nEsfGUkb9jKUViaDjIZEfc1R13jx1ON6aS3NDZGKNxh6/IP/oL69JkVE9/Kvgap8PkuuLds0U1tTnlBaEokpowbZjpzPv26zPn8NpDiwPVBKjTqnV/A9qz/l371i6KAzTJKxcplbcJWMxQnoJfdV0JGuecEbCKMWbsrZaLEPE2E51RhigxN78coVUVBLJUY5jAvHgCACJescjGjpZXSpo4K65nRMsdXZ4nfkylu3wGh312LG9pz617W5f2bC7XbVdr3MWRmslNHIHhM7qXHyygNNXDEoBGPQy6/9YdDKyUP0anCx74FIYif7htwrQdrs4p849BZkGryYdy5Rlp/PT7d+oS5Ct68+J0ynLcq2c/rp0jhAFaI2e24wFuOUox3zupErq1NfMd8hYDA+EqR2uPM7/V7R9K36OixZU1fE3V/wOuTNZlgx53X2kddKAIZABN2ASViZS7N1DgZX7PfLynL9TTjqAALzouXfywdtTWnoX9EZRQl6rTnXu/m8ojUZBragBVZkSz3LfiVUpyeShlJ0WZnaTVV2YGXH1aGoKfAwGsgcw6G2Lso92GZg7aawCmu9O9Pm0ONDvaPtBzggUhQemLvbgvUdXYDjtmHEr2UCa7oPkGN/avHoaT7hR8Qoi/fY5lXE2rT4g=
  - secure: IQCf/9Mu2Nzq9m/q5ax8xpWMsH12hVDdgzgL/cu3f8VuuCApO38V5FcMqm98+MMbhJEbd5kRvgemYYzTjHH0atX26vYgusKME+MR2+uIKYQLiLB0lrSlHtgZ30iyeOf2fXEE48xmIaOZs2gurkf9WaGC9gpa9xHiy1A9YH9rH69cc8RHKMpZ3zZkdZEieeysU8bqNq8F+jFU7J5NOxC6626BN268QgTLFk3sc0/N7O0mFVHPqhao+sYdRb4xH7gzfu6GWf5faE23MgB06omW2O0XKNaXyrDMTuRL3B+HdmPXDDXkBCJO7rVccTJmf0nTLIfjH0YyHR3uOL2/WsBoklVfjIe7+NFVe0arUFEGkOikXNm34+N0BxRXxK2+l9GkrPGbUNqb5UD5d1W6pE6UmArdSUY+LklFJFq8WDglJupaWlTw9n2h07eV2bkaKjYfJ1RfnXbfacTm2p6SVS/kKsE6Ib1o+Qi/dzcV1pQBER/6U4KojNDPvMEuHRJKjQrXa/1Y2G6IhqKJWmEqOGahnjFaJtQ/B6T26EDkiceMrM6o64Bd84j5pmGz/CXlcxRrkjBt2+ZDRNCVsdS66A1hZDQAe5sm4TT1sl9jUQr3WrlSdY7epfPuH5saoI3ka5GGbnq74u1nJ4VbKgoQsoYptlgcQPhjdCttI6/j9SCW/08=
  - secure: PUtGp8Q6iYwLPM3u8G5tw7G0yh0GgETpameiu4Z0YY3tYWlrQDXbKNxvk+DpKUyk9WdVwZOv1NL6Z8Fgjy4d66hXTjjmlsZMTra8fcfzKs3uWvmSpmR8hvkYQ/QIBs8cX5+F5kWDVn/OTTBo/9jGlfON412cEaAvqVD8lDPzJ+3zaLbQVBrD5RAmgGuS5BNaezKZLk03cVyZvTMPGs5rhQdOZLq5SiAspxk5qZTq/OJ4v4JQF/jTrrErC+XNIgYalrO69/PEKxC8uuGQucYyP1K+xxkDNyLdbWm6rEZdHXtvD2GIrDonper01S0NYw+B+VAaiD55MhIySjvZPqZKUyyOVEnt3NBRtFN6wSqFP+2/XMLjS6QvZnobyGi4v2z5jM3Maz9a/W6s9Vf3dw+0YUGYmgNyqyyOm0vTXVVo/yzQtdoP5KSOfSfG3Dkkw08i6SG5e4EzDnss63Bd3DYZbl7W806xjzC1V3xFTP60xlYlwgCoiBVhYtoGGSkU5G7anRUMxri1iCT+hHFHrZS2l2jRXsg55QPLZ/XLRll9419R+NVKkZaf5/c8YkDyhQ5PvIkEyN2hisTy/T97aWCryL30mT8+qe6yebIquvCgFGP49IvBM3Nj40cqEdjtlGrBobGE24wXXJmMyBTtl8fRJTi1QA94ScyzvbXMwiPYdxw=
